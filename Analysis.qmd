---
title: "Analysis"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

```{r}
Claims_dat <- read.csv("Insurance claims data.csv")
```

# Data Exploration and Pre-processing

```{r}
colSums(is.na(Claims_dat))
```

No missing values.

```{r}
convertYN <- c(14:18, 28:39)

Claims_dat[, convertYN] <- lapply(Claims_dat[, convertYN], function(x) ifelse(x == "Yes", 1, 0))
```

```{r}
sapply(Claims_dat, class)

to_factor <- c(5, 7:9, 12, 14:19, 22:23, 28:39)
Claims_dat[, to_factor] <- lapply(Claims_dat[, to_factor], factor)

# ncap_rating
# Convert ncap_rating to a factor with all possible levels from 0 to 5
Claims_dat$ncap_rating <- factor(Claims_dat$ncap_rating, levels = 0:5)
```

```{r}
Claims_dat <- Claims_dat |>
  select(c(-policy_id, engine_type)) 
```

```{r}
library(caret)
nzv <- nearZeroVar(Claims_dat, saveMetrics= TRUE)
low_variance_features <- rownames(nzv[nzv$nzv == TRUE, ])

Claims_dat %>%
  select(all_of(low_variance_features), claim_status) %>%
  pivot_longer(cols = all_of(low_variance_features), 
               names_to = "Feature", 
               values_to = "Value") %>%
  group_by(Feature, Value) %>%
  summarise(
    Total_Policies = n(),
    Total_Claims = sum(claim_status),
    Claim_Proportion = round(Total_Claims/Total_Policies, 4),
    .groups = 'drop'
  )
```

```{r}
Claims_dat <- Claims_dat[, !(names(Claims_dat) %in% low_variance_features)]
```
